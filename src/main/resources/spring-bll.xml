<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	  default-lazy-init="false">
	<context:component-scan base-package="org.buaa.autocdp.workbench.service"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service"/>
	</context:component-scan>

	<!-- 配置数据库连接池 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
	      init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/db_wms" />
		<property name="username" value="wms_admin" />
		<property name="password" value="123456" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="5" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- 用来检测数据库连接是否有效的SQL -->
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 开启Druid的监控统计功能 -->
		<property name="filters" value="stat" />
		<!-- Oracle连接是获取字段注释 -->
		<property name="connectProperties">
			<props>
				<prop key="remarksReporting">true</prop>
			</props>
		</property>
	</bean>
	<!-- 配置事物管理bean -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--使用基于注解方式配置事务 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置MyBatis -->
	<bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    	<property name="basePackage" value="org.buaa.autocdp.workbench.repository"/>
    	<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>
	<!--
	<context:component-scan base-package="org.buaa.autocdp.workbench.repository"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>-->
	<!-- 配置Activiti -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
	</bean>
	<!-- 加载activiti引擎 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
	<!-- Activiti提供给我们用的接口服务 -->
     <!-- 工作流仓储服务 -->
     <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
      <!-- 工作流运行服务 --> 
     <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
      <!-- 工作流表单服务 -->
     <bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
      <!-- 工作流用户服务 -->
     <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
     <!--  工作流任务服务-->
     <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
     <!--  工作流历史数据服务-->
     <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
     <!--  工作流管理服务-->
     <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
</beans>